<%#
name: idm_register
snippet: true
model: ProvisioningTemplate
%>
# Identity Management Registration Snippet
#
# Optional parameters:
#
#   idm_server              IdM server
#
#   idm_sudo                Enable sudoers
#                           Default: true
#
#   idm_ssh                 Enable ssh integration
#                           Default: true
#
#   idm_automount           Enable automounter
#                           Default: false
#
#   idm_automount_location  Location for automounts
#
#   idm_mkhomedir           Enable automatically making home directories
#                           Default: true
#
#   idm_opts                Additional options to pass directly to installer
#

<% if @host.operatingsystem.family == 'Redhat' -%>
  <% if @host.operatingsystem.name == 'Fedora' -%>
    idm_client=freeipa-client
  <% else -%>
    idm_client=ipa-client
  <% end -%>
  <% if @host.operatingsystem.major.to_i > 6 -%>
    /usr/sbin/sshd-keygen
  <% end -%>
<% else -%>
  idm_client=freeipa-client
<% end -%>

<%= @host.operatingsystem.family == 'Redhat' ? 'yum install -y libsss_sudo' : 'apt-get install -y libsss-sudo' %> $idm_client

##
## IDM Client Installation
##
<% if @host.params['idm_server'] -%>
<% domain = @host.params['idm_domain'] || @host.realm.name.downcase -%>

idm_server="--server <%= @host.params['idm_server'] %> --domain <%=domain %>"
<% end -%>

<% unless @host.param_false? 'idm_mkhomedir' %>
idm_mkhomedir="--mkhomedir"
<% end -%>

<% if @host.param_false? 'idm_ssh' %>
idm_ssh="--no-ssh"
<% end -%>

<% if @host.params['idm_opts'] -%>
idm_opts="<%= @host.params['idm_opts'] %>"
<% end -%>

# One-time password will be requested at install time. Otherwise, $HOST[OTP] is used as a placeholder value.
/usr/sbin/ipa-client-install -w '<%= @host.otp || "$HOST[OTP]" %>' --realm=<%= @host.realm %> -U $idm_mkhomedir $idm_opts $idm_server $idm_ssh

##
## Automounter
##

<% if @host.params['idm_automount_location'] -%>
automount_location="--location <%= @host.params['idm_automount_location'] %>"
<% end -%>

<% if @host.param_true? 'idm_automount' -%>
if [ -f /usr/sbin/ipa-client-automount ]
then
  /usr/sbin/ipa-client-automount $idm_server $automount_location --unattended
fi
<% end -%>

##
## Sudoers
##

<% unless @host.param_false? 'idm_enable_sudo' %>

idm_client_version=$(ipa-client-install --version)
idm_client_version_major=$(echo $idm_client_version | cut -f1 -d.)
idm_client_version_minor=$(echo $idm_client_version | cut -f2 -d.)
idm_realm=$(grep default_realm /etc/krb5.conf | cut -d"=" -f2 | tr -d ' ')
idm_domain=$(grep -A 2 domain_realm /etc/krb5.conf | tail -n1 | awk '{print $1}')
idm_dn=$(for word in $(echo $idm_domain | sed 's/\./ /g'); do echo -n dc=$word,; done)
sssd_version=$(sssd --version)
sssd_major=$(echo $sssd_version | cut -f1 -d.)
sssd_minor=$(echo $sssd_version | cut -f2 -d.)
LDAP_CONFIG=$(mktemp)

# >=ipa-client-4.1.0 automatically configures sssd for sudo
# =<ipa-client-3 requires manual configuration which this snippet takes care of

if [ $idm_client_version_major -lt 4 ]
then
  # Modify sssd.conf
  sed -i -e "s/services = .*/\0, sudo/" /etc/sssd/sssd.conf

  # Modify sssd.conf for sssd <1.11 (RHEL <6.6)
  if [ $sssd_minor -lt 11 ] || [ $sssd_major -lt 1 ]
  then
    <% if @host.params['idm_server'] -%>
    ldap_uri=", ldap://<%= @host.params['idm_server'] %>"
    krb5_server=<%= @host.params['idm_server'] %>
    <% else -%>
    krb5_server="_srv_"
    <% end -%>

cat <<EOF > $LDAP_CONFIG
sudo_provider = ldap
ldap_uri = _srv_ $ldap_uri
ldap_sudo_search_base = ou=SUDOers,${idm_dn%?}
ldap_sasl_mech = GSSAPI
ldap_sasl_authid = host/$HOSTNAME
ldap_sasl_realm = $idm_realm
krb5_server = $krb5_server
EOF
  sed -i -e "/\[domain\/.*\]/ r $LDAP_CONFIG" /etc/sssd/sssd.conf
  fi

  # Modify nsswitch.conf
  grep -q sudoers /etc/nsswitch.conf
  if [[ $? -eq 0 ]];
  then
    sed -i -e "s/^sudoers.*/sudoers:    files sss/" /etc/nsswitch.conf
  else
    echo "sudoers:    files sss" >> /etc/nsswitch.conf
  fi

  # Configure nisdomain
  <% if @host.operatingsystem.family == 'Redhat' -%>
    authconfig --nisdomain ${idm_domain} --update
    chkconfig sssd on

    if [[ $(rpm -qa systemd | wc -l) -gt 0 ]];
    then
      domain_service=/usr/lib/systemd/system/*-domainname.service

      # Workaround for BZ1071969 on RHEL 7.0
      grep -q "DefaultDependencies=no" $domain_service
      if [[ $? -ne 0 ]]
      then
        sed -i -e "s/\[Unit\]/\[Unit\]\nDefaultDependencies=no/" $domain_service
      fi

      systemctl start $(basename $domain_service)
      systemctl enable $(basename $domain_service)
    fi
  <% else -%>
  # OS is not RedHat
  sed -i -e '/^exit /d' /etc/rc.local
  echo "nisdomainname ${idm_domain}" >> /etc/rc.local
  echo "exit 0" >> /etc/rc.local
  nisdomainname ${idm_domain}
  <% end -%>
fi

<% end -%>

